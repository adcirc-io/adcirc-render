// https://github.com/atdyer/adcirc-render Version 0.0.1. Copyright 2017 Tristan Dyer.
!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports):"function"==typeof define&&define.amd?define(["exports"],r):r(e.adcirc=e.adcirc||{})}(this,function(e){"use strict";function r(e){var r={};return{get:function(t){if(void 0!==r[t])return r[t];var n;switch(t){case"WEBGL_depth_texture":n=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":n=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":n=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":n=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;case"WEBGL_compressed_texture_etc1":n=e.getExtension("WEBGL_compressed_texture_etc1");break;default:n=e.getExtension(t)}return null===n&&console.warn("WebGL: "+t+" extension not supported."),r[t]=n,n}}}function t(e){return!(!window.WebGLRenderingContext||!e.getContext("webgl")&&!e.getContext("experimental-webgl"))}function n(){function e(){for(var e=0;e<16;++e)t[e]=n[e];return t}function r(){for(var e=0;e<16;++e)n[e]=t[e];return n}var t=new Float32Array(16).fill(0),n=new Float32Array(16);return t[0]=t[5]=t[10]=t[15]=1,t.identity=function(){return t.fill(0),t[0]=t[5]=t[10]=t[15]=1,t},t.ortho=function(e,r,n,o,i,a){return t[0]=2/(r-e),t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=2/(o-n),t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=-1/(a-i),t[11]=0,t[12]=(r+e)/(e-r),t[13]=(o+n)/(n-o),t[14]=-i/(i-a),t[15]=1,t},t.scale=function(r,o,i){return n[0]=r*t[0],n[1]=r*t[1],n[2]=r*t[2],n[3]=r*t[3],n[4]=o*t[4],n[5]=o*t[5],n[6]=o*t[6],n[7]=o*t[7],n[8]=i*t[8],n[9]=i*t[9],n[10]=i*t[10],n[11]=i*t[11],n[12]=t[12],n[13]=t[13],n[14]=t[14],n[15]=t[15],e(),t},t.translate=function(o,i,a){return r(),n[12]=t[0]*o+t[4]*i+t[8]*a+t[12],n[13]=t[1]*o+t[5]*i+t[9]*a+t[13],n[14]=t[2]*o+t[6]*i+t[10]*a+t[14],n[15]=t[3]*o+t[7]*i+t[11]*a+t[15],e()},t}function o(e){e=e||Object.create(null);var r={},t={};return e.on=function(t,n){return arguments.length?1===arguments.length?r[t]:(void 0===r[t]&&(r[t]=[]),r[t].indexOf(n)===-1&&r[t].push(n),e):e},e.once=function(r,n){return arguments.length?1===arguments.length?t[r]:(void 0===t[r]&&(t[r]=[]),t[r].indexOf(n)===-1&&t[r].push(n),e):e},e.off=function(n,o){var i,a=r[n],u=t[n];return void 0!==a&&(i=a.indexOf(o))!==-1&&a.splice(i,1),void 0!==u&&(i=u.indexOf(o))!==-1&&u.splice(i,1),e},e.dispatch=function(n){var o,i,a=r[n.type],u=t[n.type],c=[];if(void 0!==a){for(void 0===n.target&&(n.target=e),i=a.length,o=0;o<i;o++)c[o]=a[o];for(o=0;o<i;o++)c[o].call(e,n)}if(void 0!==u){for(void 0===n.target&&(n.target=e),i=u.length,o=0;o<i;o++)c[o]=u[o];for(o=0;o<i;o++)c[o].call(e,n);t[n.type]=[]}return e},e}function i(e){function i(){(f()||L)&&(L=!1,c()),requestAnimationFrame(i)}function a(){var e=d3.mouse(this),r=d3.zoomTransform(v),t=r.invert(e);t[1]=h-t[1],s.dispatch({type:"click",coordinates:t,mouse:e,transform:r,offset_y:h})}function u(){var e=d3.mouse(this),r=d3.zoomTransform(v).invert([e[0],e[1]]);r[1]=h-r[1],s.dispatch({type:"hover",coordinates:r})}function c(){g.clear(g.COLOR_BUFFER_BIT|g.DEPTH_BUFFER_BIT);for(var e=0;e<F.length;++e)F[e].render()}function f(){return(v.clientWidth!==x||v.clientHeight!==w)&&(x=v.clientWidth,w=v.clientHeight,v.width=x*b,v.height=w*b,g.viewport(0,0,x,w),(!h||h<0)&&(h=w),_(),!0)}function _(e,r,t){if(!arguments.length){var n=d3.zoomTransform(v);return _(n.k,n.x,n.y)}y.ortho(0,x,w,0,-1e4,1e4).translate(r,t,0).scale(e,-e,1).translate(0,-h,0);for(var o=0;o<F.length;++o)F[o].shader().projection(y);s.dispatch({type:"projection",transform:d3.zoomTransform(v)})}function l(){var e=d3.event.transform;_(e.k,e.x,e.y),s.render()}var s=o(),d=e,v=e.node();if(t(v)){var m={alpha:!1,antialias:!1,premultiplieAlpha:!1,stencil:!0},g=v.getContext("webgl",m)||v.getContext("experimental-webgl",m);if(null!==g){var p=r(g);p.get("ANGLE_instanced_arrays"),p.get("OES_element_index_uint"),p.get("OES_standard_derivatives");var h,x=0,w=0,b=1,E=d3.color("white"),y=n(),A=d3.zoom().on("zoom",l);d.call(A).on("mousemove",u).on("click",a);var L=!0,F=[];return s.add_view=function(e){return e.on("update",s.render),F.push(e),_(),s},s.clear_color=function(e){return arguments.length?(E=d3.rgb.apply(E,arguments),g.clearColor(E.r/255,E.g/255,E.b/255,E.opacity),s.render()):E},s.gl_context=function(){return g},s.remove_view=function(e){return e.off("update",s.render),s},s.render=function(){return L=!0,s},s.set_view=function(e){return e.on("update",s.render),F=[e],_(),s},s.zoom_to=function(e){if(!arguments.length)return s;var r=e.bounding_box(),t=0,n=r[1][0]-r[0][0],o=r[1][1]-r[0][1],i=(r[0][0]+r[1][0])/2,a=w-(r[0][1]+r[1][1])/2,u=.9/Math.max(n/x,o/w),c=[x/2-u*i,w/2-u*a];return 2==arguments.length&&(t=arguments[1]),d.transition().duration(t).call(A.transform,d3.zoomIdentity.translate(c[0],c[1]).scale(u)),s},v.addEventListener("webglcontextlost",s.dispatch),v.addEventListener("webglcontextrestored",s.dispatch),v.addEventListener("webglcontextcreationerror",s.dispatch),i(),s}}}function a(e,r){function t(e){for(var r=new Float32Array(3*u),t=0;t<u;++t){var n=e[t];r[3*t]=n,r[3*t+1]=n,r[3*t+2]=n}var o=_.get("vertex_value");i.bindBuffer(i.ARRAY_BUFFER,o.buffer),i.bufferSubData(i.ARRAY_BUFFER,0,r)}function n(e){for(var r=new Float32Array(3*u),t=a.nodes().map,n=a.elements().array,o=0;o<3*u;++o){var c=n[o],f=t.get(c);r[o]=e[f]}var l=_.get("vertex_value");i.bindBuffer(i.ARRAY_BUFFER,l.buffer),i.bufferSubData(i.ARRAY_BUFFER,0,r)}var i=e,a=r,u=0,c=0,f=1,_=d3.map(),l=o();return l.bind_buffer=function(e){var r=_.get(e);if(r)return i.bindBuffer(i.ARRAY_BUFFER,r.buffer),r},l.bounding_box=function(){var e=a.bounding_box();return[[f*e[0][0],f*e[0][1]],[f*e[1][0],f*e[1][1]]]},l.draw_arrays=function(){i.drawArrays(i.TRIANGLES,0,3*u)},l.elemental_value=function(e){var r=a.elemental_value(e);r&&(t(r),l.dispatch({type:"update",value:e}))},l.nodal_value=function(e){var r=a.nodal_value(e);r&&(n(r),l.dispatch({type:"update",value:e}))},function(e,t){var n=r.bounding_box();Math.min(n[1][0]-n[0][0],n[1][1]-n[0][1]),c=t.array.length,u=t.array.length/3;for(var o=new Float32Array(2*c),a=new Float32Array(c),l=new Float32Array(3*c),s=e.dimensions,d=0;d<c;++d){var v=t.array[d],m=e.map.get(v);o[2*d]=e.array[s*m]*f,o[2*d+1]=e.array[s*m+1]*f}for(var d=0;d<u;++d)l[9*d]=1,l[9*d+4]=1,l[9*d+8]=1;var g=i.createBuffer();i.bindBuffer(i.ARRAY_BUFFER,g),i.bufferData(i.ARRAY_BUFFER,o,i.STATIC_DRAW);var p=i.createBuffer();i.bindBuffer(i.ARRAY_BUFFER,p),i.bufferData(i.ARRAY_BUFFER,a,i.DYNAMIC_DRAW);var h=i.createBuffer();i.bindBuffer(i.ARRAY_BUFFER,h),i.bufferData(i.ARRAY_BUFFER,l,i.STATIC_DRAW),_.set("vertex_position",{buffer:g,size:2,type:i.FLOAT,normalized:!1,stride:0,offset:0}),_.set("vertex_value",{buffer:p,size:1,type:i.FLOAT,normalized:!1,stride:0,offset:0}),_.set("vertex_normal",{buffer:h,size:3,type:i.FLOAT,normalized:!1,stride:0,offset:0})}(a.nodes(),a.elements()),l}function u(e,r,t){var n=e,i=r,a=t,u=o();return u.elemental_value=function(e){return i.elemental_value(e),u},u.nodal_value=function(e){return i.nodal_value(e),u},u.render=function(){return a.use(),a.attributes().each(function(e,r){var t=i.bind_buffer(r);"undefined"!==t&&(n.vertexAttribPointer(e,t.size,t.type,t.normalized,t.stride,t.offset),n.enableVertexAttribArray(e))}),i.draw_arrays(),u},u.shader=function(e){return arguments.length?(e.projection(a.projection()),a=e,u.dispatch({type:"update"}),u):a},i.on("update",u.dispatch),u}function c(e,r,t,n,o){var i=e.createShader(r);if(e.shaderSource(i,t),e.compileShader(i),e.getShaderParameter(i,e.COMPILE_STATUS)===!1){var a=e.getShaderInfoLog(i);return o||(o=console.error),o("Unable to compile shader"),o(a),void e.deleteShader(i)}return e.getShaderParameter(i,e.COMPILE_STATUS)===!1&&(n||(n=console.warn),n(e.getShaderInfoLog(i),f(t))),i}function f(e){for(var r=e.split("\n"),t=0;t<r.length;t++)r[t]=t+1+": "+r[t];return r.join("\n")}function _(e,r,t,n,o){var i=e.createProgram(),a=c(e,e.VERTEX_SHADER,r,n,o),u=c(e,e.FRAGMENT_SHADER,t,n,o);if(i&&a&&u)return e.attachShader(i,a),e.attachShader(i,u),e.linkProgram(i),e.getProgramParameter(i,e.LINK_STATUS)===!1&&(o||(o=console.error),o(e.getProgramInfoLog(i))),e.deleteShader(a),e.deleteShader(u),i}function l(e){var r=e,t=_(r,s(),d()),n=d3.color("white"),o=d3.color("black"),i=.3,a=1;r.useProgram(t);var u=d3.map({vertex_normal:r.getAttribLocation(t,"vertex_normal"),vertex_position:r.getAttribLocation(t,"vertex_position")}),c=d3.map({face_color:r.getUniformLocation(t,"face_color"),projection_matrix:r.getUniformLocation(t,"projection_matrix"),wire_alpha:r.getUniformLocation(t,"wire_alpha"),wire_color:r.getUniformLocation(t,"wire_color"),wire_width:r.getUniformLocation(t,"wire_width")});return t.attribute=function(e){return u.get(e)},t.attributes=function(e){return arguments.length?(u.each(e),t):u},t.face_color=function(e){return arguments.length?(n=e,r.useProgram(t),r.uniform3fv(t.uniform("face_color"),[e.r/255,e.g/255,e.b/255]),t):n},t.set_projection=function(e){return r.useProgram(t),r.uniformMatrix4fv(t.uniform("projection_matrix"),!1,e),t},t.wire_alpha=function(e){return arguments.length?(i=e,r.useProgram(t),r.uniform1f(t.uniform("wire_alpha"),e),t):i},t.wire_color=function(e){return arguments.length?(o=e,r.useProgram(t),r.uniform3fv(t.uniform("wire_color"),[e.r/255,e.g/255,e.b/255]),t):o},t.wire_width=function(e){return arguments.length?(a=e,r.useProgram(t),r.uniform1f(t.uniform("wire_width"),e),t):a},t.uniform=function(e){return c.get(e)},t.uniforms=function(){return c.keys()},t.use=function(){return r.useProgram(t),t},t.face_color(t.face_color()).wire_alpha(t.wire_alpha()).wire_color(t.wire_color()).wire_width(t.wire_width())}function s(){return["attribute vec3 vertex_position;","attribute vec3 vertex_normal;","uniform mat4 projection_matrix;","varying vec3 _vertex_normal;","void main( void ) {","   gl_Position = projection_matrix * vec4( vertex_position, 1.0 );","   _vertex_normal = vertex_normal;","}"].join("\n")}function d(){return["#extension GL_OES_standard_derivatives : enable","precision highp float;","varying vec3 _vertex_normal;","uniform vec3 face_color;","uniform vec3 wire_color;","uniform float wire_alpha;","uniform float wire_width;","float edgeFactorTri() {","   vec3 d = fwidth( _vertex_normal.xyz );","   vec3 a3 = smoothstep( vec3( 0.0 ), d * wire_width, _vertex_normal.xyz );","   return min( min( a3.x, a3.y ), a3.z );","}","void main() {","   vec4 wire = mix( vec4(face_color, 1.0), vec4(wire_color, 1.0), wire_alpha);","   if ( wire_width == 0.0 ) {","       gl_FragColor = vec4(_vertex_color, 1.0);","   } else {","       gl_FragColor = mix( wire, vec4(_vertex_color, 1.0), edgeFactorTri() );","   }","}"].join("\n")}function v(e,r,t,n){function o(e,r,t){for(var n=[],o=0;o<t;++o)n.push(e+(r-e)*o/(t-1));return n}r=r>1?r:2;for(var i,a=e,u=_(a,m(r),g()),c=[],f=[],l=d3.color("black"),s=.3,d=1,t=t||0,n=n||1,v=0;v<r;++v)f.push(t+(n-t)*v/(r-1)),c.push(d3.color(d3.schemeCategory20[v%r]));a.useProgram(u);var p=d3.map({vertex_normal:a.getAttribLocation(u,"vertex_normal"),vertex_position:a.getAttribLocation(u,"vertex_position"),vertex_value:a.getAttribLocation(u,"vertex_value")}),h=d3.map({gradient_colors:a.getUniformLocation(u,"gradient_colors"),gradient_stops:a.getUniformLocation(u,"gradient_stops"),projection_matrix:a.getUniformLocation(u,"projection_matrix"),wire_alpha:a.getUniformLocation(u,"wire_alpha"),wire_color:a.getUniformLocation(u,"wire_color"),wire_width:a.getUniformLocation(u,"wire_width")});return u.attribute=function(e){return p.get(e)},u.attributes=function(e){return arguments.length?(p.each(e),u):p},u.gradient_colors=function(e){if(!arguments.length)return c;c=e;var r=c.map(function(e){return[e.r/255,e.g/255,e.b/255]}).reduce(function(e,r){return e.concat(r)},[]);return a.useProgram(u),a.uniform3fv(u.uniform("gradient_colors"),r),u},u.gradient_stops=function(e){return arguments.length?(2==e.length&&2!==r&&(e=o(e[0],e[1],r)),f=e,a.useProgram(u),a.uniform1fv(u.uniform("gradient_stops"),f),u):f},u.projection=function(e){return arguments.length?(i=e,a.useProgram(u),a.uniformMatrix4fv(u.uniform("projection_matrix"),!1,e),u):i},u.wire_alpha=function(e){return arguments.length?(s=e,a.useProgram(u),a.uniform1f(u.uniform("wire_alpha"),e),u):s},u.wire_color=function(e){return arguments.length?(l=e,a.useProgram(u),a.uniform3fv(u.uniform("wire_color"),[e.r/255,e.g/255,e.b/255]),u):l},u.wire_width=function(e){return arguments.length?(d=e,a.useProgram(u),a.uniform1f(u.uniform("wire_width"),e),u):d},u.uniform=function(e){return h.get(e)},u.uniforms=function(){return h.keys()},u.use=function(){return a.useProgram(u),u},u.gradient_colors(u.gradient_colors()).gradient_stops(u.gradient_stops()).wire_alpha(u.wire_alpha()).wire_color(u.wire_color()).wire_width(u.wire_width())}function m(e){for(var r=["attribute vec2 vertex_position;","attribute vec3 vertex_normal;","attribute float vertex_value;","uniform mat4 projection_matrix;","uniform float gradient_stops["+e+"];","uniform vec3 gradient_colors["+e+"];","varying vec3 _vertex_normal;","varying vec3 _vertex_color;","void main() {","  gl_Position = projection_matrix * vec4( vertex_position, vertex_value, 1.0 );","  _vertex_normal = vertex_normal;","  _vertex_color = gradient_colors[0];","  float t;"],t=1;t<e;++t)r.push("  t = clamp((vertex_value - gradient_stops["+(t-1)+"]) / (gradient_stops["+t+"]-gradient_stops["+(t-1)+"]), 0.0, 1.0);"),r.push("  _vertex_color = mix( _vertex_color, gradient_colors["+t+"], t*t*(3.0-2.0*t));");return r.push("}"),r.join("\n")}function g(){return["#extension GL_OES_standard_derivatives : enable","precision mediump float;","varying vec3 _vertex_normal;","varying vec3 _vertex_color;","uniform vec3 wire_color;","uniform float wire_alpha;","uniform float wire_width;","float edgeFactorTri() {","   vec3 d = fwidth( _vertex_normal.xyz );","   vec3 a3 = smoothstep( vec3( 0.0 ), d * wire_width, _vertex_normal.xyz );","   return min( min( a3.x, a3.y ), a3.z );","}","void main() {","   vec4 wire = mix( vec4(_vertex_color, 1.0), vec4(wire_color, 1.0), wire_alpha);","   if ( wire_width == 0.0 ) {","       gl_FragColor = vec4(_vertex_color, 1.0);","   } else {","       gl_FragColor = mix( wire, vec4(_vertex_color, 1.0), edgeFactorTri() );","   }","}"].join("\n")}e.gl_renderer=i,e.geometry=a,e.view=u,e.basic_shader=l,e.gradient_shader=v,Object.defineProperty(e,"__esModule",{value:!0})});